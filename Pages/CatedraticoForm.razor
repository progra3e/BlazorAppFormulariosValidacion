@page "/Catedratico2"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage



<h3>Catedratico</h3>

<EditForm Model="@catedratico" OnValidSubmit="@Guardar">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Nombre">Nombre del Catedrático</label>
        <InputText id="Nombre" @bind-Value="catedratico.Nombre" class="form-control" />
        <ValidationMessage For="() => catedratico.Nombre" />
    </div>
    <div class="form-group">
        <label for="Apellido">Apellido del Catedrático</label>
        <InputText id="Apellido" @bind-Value="catedratico.Apellido" class="form-control" />
        <ValidationMessage For="() => catedratico.Apellido" />
    </div>
    <div class="form-group">
        <label for="Direccion">Dirección del Catedrático</label>
        <InputText id="Direccion" @bind-Value="catedratico.Direccion" class="form-control" />
    </div>
    <div class="form-group">
        <label for="FechaNacimiento">Fecha de Nacimiento</label>
        <InputDate id="FechaNacimiento" @bind-Value="catedratico.FechaNacimiento" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Titulo">Título Obtenido</label>
        <InputText id="Titulo" @bind-Value="catedratico.Titulo" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Colegiado">Número de Colegiado</label>
        <InputText id="Colegiado" @bind-Value="catedratico.Colegiado" class="form-control" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</EditForm>

@if (catedraticos!= null)
{    
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Fecha Nacimiento</th>
                <th>Título</th>
                <th>Colegiado</th>
                <th>Eliminar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var catedratico in catedraticos)
            {
                <tr>
                    <td>@catedratico.Nombre</td>
                    <td>@catedratico.Apellido</td>
                    <td>@catedratico.FechaNacimiento</td>
                    <td>@catedratico.Titulo</td>
                    <td>@catedratico.Colegiado</td>
                    <td><button class="btn btn-danger" @onclick="@(() => BorrarCatedratico(catedratico.Colegiado))">Eliminar</button></td>
                </tr>
            }
        </tbody>
    </table>
}

    @code {

    private Catedratico catedratico = new Catedratico();
    List<Catedratico> catedraticos = new List<Catedratico>();


    protected async Task Guardar()
    {
        catedraticos.Add(catedratico);

        await localStorage.SetItemAsync("catedraticos", catedraticos);

    }

    protected override async Task OnInitializedAsync()
    {   //La primera vez que se corre poner en comentarios, pues como no existen datos
        //convierta la lista catedraticos en null
        catedraticos = await localStorage.GetItemAsync<List<Catedratico>>("catedraticos");
    }

    protected async Task BorrarCatedratico(string Colegiado)
    {
        catedraticos.Remove(catedraticos.First(c => c.Colegiado == Colegiado));
        await localStorage.SetItemAsync("catedraticos", catedraticos);

    }

}
