@page "/catedratico"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h3>Catedratico</h3>

<EditForm Model="@catedratico" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="Nombre">Ingrese Nombre:</label>
        <InputText class="form-control" id="Nombre" @bind-Value="catedratico.Nombre" />
        <ValidationMessage For="() => catedratico.Nombre" />
    </div>
    <div>
        <label for="Apellido">Ingrese Apellido:</label>
        <InputText class="form-control" id="Apellido" @bind-Value="catedratico.Apellido" />
        <ValidationMessage For="() => catedratico.Apellido" />
    </div>
    <div>
        <label for="Direccion">Ingrese Direccion:</label>
        <InputText class="form-control" id="Direccion" @bind-Value="catedratico.Direccion" />
        <ValidationMessage For="() => catedratico.Direccion" />
    </div>
    <div>
        <label for="FechaNacimiento">Fecha Nacimiento</label>
        <InputDate class="form-control" id="FechaNacimiento" @bind-Value="catedratico.FechaNacimiento" />
        <ValidationMessage For="() => catedratico.FechaNacimiento" />
    </div>
    <div>
        <label for="Titulo">Ingrese Titulo:</label>
        <InputText class="form-control" id="Titulo" @bind-Value="catedratico.Titulo" />
        <ValidationMessage For="() => catedratico.Titulo" />
    </div>
    <div>
        <label for="Colegiado">Ingrese Colegiado:</label>
        <InputText class="form-control" id="Colegiado" @bind-Value="catedratico.Colegiado" />
        <ValidationMessage For="() => catedratico.Colegiado" />
    </div>
    <div>
        <button type="submit" class="btn btn-primary">Guardar</button>
    </div>
</EditForm>

@if (catedraticos != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Direccion</th>
                <th>Fecha Nacimiento</th>
                <th>Título</th>
                <th>Colegiado</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var catedratico in catedraticos)
            {
                <tr>
                    <td>@catedratico.Nombre</td>
                    <td>@catedratico.Apellido</td>
                    <td>@catedratico.FechaNacimiento</td>
                    <td>@catedratico.Titulo</td>
                    <td>@catedratico.Colegiado</td>                    
                </tr>
            }
        </tbody>
    </table>
}

@code {
    Catedratico catedratico = new Catedratico();

    List<Catedratico> catedraticos = new List<Catedratico>();

    //Async: manda a guardar y sigue corriendo el programa aunque siga guardando en segundo  plano
    protected async Task Guardar()
    {
        //Guarda al catedratico en la lista de catedraticos
        catedraticos.Add(catedratico);
        //Manda a grabar localmente la lista de catedraticos
        await localStorage.SetItemAsync("catedraticos", catedraticos);

        //Lee la lista guardada localmente y la copia a la lista
        //var name = await localStorage.GetItemAsync<string>("name");
    }

    //Sin Async: hasta termminar de guardar sigue corriendo el programa
    // protected void Guardar2()
    // {        
    //     catedraticos.Add(catedratico);   
    //     localStorage.SetItemAsync("catedraticos", catedraticos);        
    // }
}
